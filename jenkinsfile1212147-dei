pipeline {
    agent any

    environment {

        MAVEN_HOME = '/usr/share/maven'
        JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-amd64'

        GITHUB_URL = 'https://github.com/hugocoelho-isep/M1A_1212147_1162086_ODSOFT.git'
        GITHUB_BRANCH = 'main'
        GITHUB_ID = 'githubcredentials'
    }

    stages {
        stage('Checkout') {
            steps {
                git url: "${GITHUB_URL}", branch: "${GITHUB_BRANCH}", credentialsId: "${GITHUB_ID}"
            }
        }

        stage('Clean') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn clean"
            }
        }

        stage('Validate') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn validate"
            }
        }

        stage('Compile') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn compile"
            }
        }

        stage('Unit Tests') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn test"
            }
        }

        stage('Integration Tests') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn failsafe:integration-test failsafe:verify"
            }
        }

        stage('Mutation Testing') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn org.pitest:pitest-maven:mutationCoverage"
            }
        }

        stage('Install') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn install -DskipTests"
            }
        }

        stage('Deploy') {
            steps {
                // Use the SSH key with the specified credentials ID
                withCredentials([sshUserPrivateKey(credentialsId: '03636b6c-7ceb-4df1-a28a-1e4b0f7e7e17', keyFileVariable: 'SSH_KEY')]) {

                   // Stop the old version of the application running on port 2228
                   sh """
                   ssh -i \$SSH_KEY -o StrictHostKeyChecking=no -p 11341 root@vsgate-ssh.dei.isep.ipp.pt '
                       # Find the PID of the process running on port 2228 and kill it
                       pid=\$(lsof -ti:2228)
                       if [ ! -z "\$pid" ]; then
                           echo "Killing process ID: \$pid on port 2228"
                           kill -9 \$pid
                       else
                           echo "No process found running on port 2228."
                       fi
                   '
                   """

                    // Secure copy of the project
                    sh """
                    scp -i \$SSH_KEY -P 11341 target/psoft-g1-0.0.1-SNAPSHOT.jar root@vsgate-ssh.dei.isep.ipp.pt:/usr/local/librarymanager
                    """

                    echo "Deploying application..."
                    // Run the Spring Boot application on the remote server with the overridden server port
                    sh 'ssh -i \$SSH_KEY -p 11341 root@vsgate-ssh.dei.isep.ipp.pt "nohup java -jar /usr/local/librarymanager/psoft-g1-0.0.1-SNAPSHOT.jar --server.port=2228 > /dev/null 2>&1 &"'

                }
            }
        }

    }


    post {
        success {
            // Actions to take when the pipeline succeeds
            echo 'Pipeline completed successfully!'
        }
        failure {
            // Actions to take when the pipeline fails
            echo 'Pipeline failed!'
        }
    }
}