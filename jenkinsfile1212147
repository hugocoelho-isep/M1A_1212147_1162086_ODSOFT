

pipeline {
    agent any

    environment {

        // LINUX
        MAVEN_HOME = '/opt/homebrew/Cellar/maven/3.9.9/libexec'
        JAVA_HOME = '/Users/miguelcarvalho/.sdkman/candidates/java/17.0.12-amzn'

        GITHUB_URL = 'https://github.com/hugocoelho-isep/M1A_1212147_1162086_ODSOFT.git'
        GITHUB_BRANCH = 'main'
        GITHUB_ID = 'githubcredentials'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from your repository
                git url: "${GITHUB_URL}", branch: "${GITHUB_BRANCH}", credentialsId: "${GITHUB_ID}"
            }
        }

        stage('Clean') {
            steps {
                // Clean, compile, and package the application using Maven
                sh "${MAVEN_HOME}/bin/mvn clean"
            }
        }
        stage('Validate') {
            steps {
                // Validate the project structure
                sh "${MAVEN_HOME}/bin/mvn validate"
            }
        }

        stage('Compile') {
            steps {
                // Compile the source code
                sh "${MAVEN_HOME}/bin/mvn compile"
            }
        }

        stage('Unit Tests') {
                    steps {
                        sh "${MAVEN_HOME}/bin/mvn test"
                    }
                }

        stage('Integration Tests') {
                    steps {
                        sh "${MAVEN_HOME}/bin/mvn failsafe:integration-test failsafe:verify"
                    }
                }
                
        stage('Mutation Testing') {
                     steps {
                         sh "${MAVEN_HOME}/bin/mvn org.pitest:pitest-maven:mutationCoverage"
                     }
                }

        


        stage('Package') {
            steps {
                // Package the application into a JAR or WAR
                sh "${MAVEN_HOME}/bin/mvn package"
            }
        }



        // run sonarqube test
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarqubeDocker') {
                    sh 'export PATH=$PATH:/opt/homebrew/Cellar/maven/3.9.9/libexec/bin && mvn clean verify sonar:sonar -Dsonar.projectKey=sonarproject -Dsonar.projectName=sonarproject -Dsonar.host.url=http://localhost:9000'
                    echo 'SonarQube Analysis Completed'

                }

            }
        }
        
       stage('Deploy') {
    steps {
        
            sh "cd target && JENKINS_NODE_COOKIE=donkillme nohup java -jar psoft-g1-0.0.1-SNAPSHOT.jar --server.port=2228 > nohup.out 2>&1 &"
    }
    }
    }
}